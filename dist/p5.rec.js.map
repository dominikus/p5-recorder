{"version":3,"file":"p5.rec.js","sources":["../src/encoder-ffmpeg.js","../src/index.js","../src/video-overlay.js"],"sourcesContent":["import { createFFmpeg } from \"@ffmpeg/ffmpeg\";\n\nlet _ffmpeg;\nlet _config;\n\nexport const init = (standalone = false) => {\n  // set up ffmpeg:\n  let ffmpegOptions = {\n    log: false,\n    logger: parseProgress,\n  };\n\n  if (standalone) {\n    ffmpegOptions.corePath = \"/node_modules/@ffmpeg/core/ffmpeg-core.js\";\n  } else {\n    ffmpegOptions.corePath =\n      \"https://unpkg.com/@ffmpeg/core@v0.7.1/ffmpeg-core.js\";\n  }\n\n  _ffmpeg = createFFmpeg(ffmpegOptions);\n};\n\nconst parseFpsMessageRE = /frame=\\s+(\\d+)\\s+fps/g;\nconst parseProgress = (p) => {\n  // @ffmpeg can't detect the input duration, so we can't use the 'process' callback :(\n  if (p && p.message) {\n    let currentFrame;\n    while ((currentFrame = parseFpsMessageRE.exec(p.message)) !== null) {\n      const progress = +currentFrame[1] / _config.totalFrames;\n      if (!isNaN(progress) && _config.onProgress) {\n        _config.onProgress(progress);\n      }\n    }\n  }\n};\n\nexport const transcode = async (imageData, config) => {\n  console.log(\"transcoding\");\n\n  _config = config;\n\n  const inputName = \"input.webm\";\n  const outputName = \"output.mp4\";\n\n  console.log(\"loading ffmpeg\");\n  await _ffmpeg.load();\n  console.log(\"start transcoding\");\n  await _ffmpeg.write(inputName, imageData);\n\n  const ffmpegParams = `-r ${_config.framerate} -i ${inputName} -s ${_config.width}x${_config.height} -crf ${_config.crf} -preset ${_config.preset} -tune animation -pix_fmt yuv420p ${outputName}`;\n\n  await _ffmpeg.run(ffmpegParams);\n  const data = _ffmpeg.read(outputName);\n\n  // clean up:\n  await _ffmpeg.remove(inputName);\n  await _ffmpeg.remove(outputName);\n\n  _config.onFinish(data);\n};\n","import { init, transcode } from \"./encoder-ffmpeg.js\";\nimport videoOverlay from \"./video-overlay.js\";\n\nconst H264_PRESETS = [\n  \"ultrafast\",\n  \"superfast\",\n  \"veryfast\",\n  \"faster\",\n  \"fast\",\n  \"medium\",\n  \"slow\",\n  \"slower\",\n  \"veryslow\",\n];\n\nfunction initP5Rec() {\n  let _isRecording = false;\n  let _config = {};\n  let _p5RecInitialized = false;\n\n  let recordedBlobs = [];\n\n  p5.prototype.startRecording = function (options = {}) {\n    // stop regular drawing loop\n    this.noLoop();\n\n    if (!_p5RecInitialized) {\n      // set up encoder:\n      init(options.standalone);\n\n      // extend p5.js draw loop:\n      const _internalDraw = this._draw;\n\n      this._draw = async () => {\n        _internalDraw();\n\n        if (_isRecording) {\n          // store frame\n          if (this.canvas) {\n            this.canvas.toBlob(async (blob) => {\n              // TODO: store directly in virtual filesystem instead of creating array?\n              recordedBlobs.push(blob);\n\n              this._requestAnimId = window.requestAnimationFrame(this._draw);\n            });\n          } else {\n            // couldn't find p5 canvas\n            this._requestAnimId = window.requestAnimationFrame(this._draw);\n          }\n        } else {\n          // check if we had a recording going before:\n          if (recordedBlobs.length > 0) {\n            _config.totalFrames = recordedBlobs.length;\n\n            console.log(`got ${_config.totalFrames} frames`);\n            const resu = new Uint8Array(\n              await new Blob(recordedBlobs).arrayBuffer()\n            );\n            recordedBlobs = [];\n            await transcode(resu, _config);\n\n            // regular redraw:\n            this._requestAnimId = window.requestAnimationFrame(this._draw);\n          } else {\n            // regular redraw:\n            this._requestAnimId = window.requestAnimationFrame(this._draw);\n          }\n        }\n      };\n\n      this._draw();\n\n      _p5RecInitialized = true;\n    }\n\n    _isRecording = true;\n\n    // parse options:\n    // H264 specific options:\n    let { preset, crf, onProgress, onFinish } = options;\n    if (!preset || !H264_PRESETS.includes(preset)) {\n      preset = \"slow\";\n    }\n    // crf (Constant Rate Factor) defines video quality and\n    // goes from 0 (maximum quality/size) to 51 (worst quality possible)\n    // rf. https://trac.ffmpeg.org/wiki/Encode/H.264#crf\n    if (typeof crf === \"undefined\" || isNaN(crf) || crf < 0 || crf > 51) {\n      crf = 18;\n    }\n    // general options:\n    if (!onProgress) {\n      onProgress = (p) => console.log(p);\n    }\n    if (!onFinish) {\n      onFinish = (videoBuffer) => {\n        videoOverlay(videoBuffer, _config);\n      };\n    }\n\n    _config = {\n      width: this.width,\n      height: this.height,\n      pixelDensity: this._pixelDensity,\n      framerate: this._targetFrameRate,\n      crf,\n      preset,\n      onProgress,\n      onFinish,\n    };\n\n    console.log(_config);\n  };\n\n  p5.prototype.stopRecording = function () {\n    _isRecording = false;\n  };\n}\n\ninitP5Rec();\n","export default function (data, _config) {\n  const container = document.createElement(\"div\");\n  container.style.width = \"100%\";\n  container.style.height = \"100%\";\n  container.style.position = \"fixed\";\n  container.style.display = \"flex\";\n  container.style.top = \"0px\";\n  container.style.left = \"0px\";\n  container.style.backgroundColor = \"rgba(0,0,0,0.8)\";\n\n  const closeButton = document.createElement(\"button\");\n  closeButton.innerHTML = \"&times;\";\n  closeButton.style.color = \"white\";\n  closeButton.style.backgroundColor = \"black\";\n  closeButton.style.border = \"3px solid white\";\n  closeButton.style.borderRadius = \"100%\";\n  closeButton.style.fontSize = \"16px\";\n  closeButton.style.fontWeight = \"bold\";\n  closeButton.style.padding = \"2px 6px 1px 6px\";\n  closeButton.style.position = \"fixed\";\n  closeButton.style.top = \"10px\";\n  closeButton.style.right = \"10px\";\n\n  closeButton.onclick = () => {\n    container.remove();\n  };\n  container.appendChild(closeButton);\n\n  const video = document.createElement(\"video\");\n  video.width = _config.width;\n  video.height = _config.height;\n  video.style.display = \"block\";\n  video.style.margin = \"auto\";\n\n  video.loop = true;\n  video.controls = true;\n  var videoURL = URL.createObjectURL(\n    new Blob([data.buffer], { type: \"video/mp4\" })\n  );\n  video.src = videoURL;\n\n  container.appendChild(video);\n  document.querySelector(\"body\").appendChild(container);\n}\n"],"names":["_ffmpeg","_config","parseFpsMessageRE","parseProgress","p","message","currentFrame","exec","progress","totalFrames","isNaN","onProgress","transcode","imageData","config","console","log","load","write","run","framerate","width","height","crf","preset","data","read","remove","onFinish","H264_PRESETS","_isRecording","_p5RecInitialized","recordedBlobs","p5","prototype","startRecording","options","this","noLoop","standalone","ffmpegOptions","logger","corePath","createFFmpeg","init","_internalDraw","_draw","_this","canvas","toBlob","blob","push","_requestAnimId","window","requestAnimationFrame","length","Blob","arrayBuffer","resu","Uint8Array","includes","videoBuffer","container","document","createElement","style","position","display","top","left","backgroundColor","closeButton","innerHTML","color","border","borderRadius","fontSize","fontWeight","padding","right","onclick","appendChild","video","margin","loop","controls","videoURL","URL","createObjectURL","buffer","type","src","querySelector","videoOverlay","pixelDensity","_pixelDensity","_targetFrameRate","stopRecording","initP5Rec"],"mappings":"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"}